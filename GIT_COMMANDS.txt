================================================================================================================
Environment setup
================================================================================================================
1. Install GIT client and set following 
	
	git config --global user.name "XYZ Shetty"
	git config --global user.email "skdhf@as.com"
	git config --global color.ui true
	git config --global core.editor vim
	git config --global merge.tool vimdiff
	git config --global core.autocrlf true
	
	once done see the configuration by using below command
	git config --list
	
2. Create a repository in GIT Site or Bitbucket

================================================================================================================
GIT Basic Commands
================================================================================================================
1. Initialize a repository locally or import exsisting repository

git init

git clone git_user@[Repository http link] 
then password will be asked at the time of getting connection

2. Add file(s) to local repository

git add [file_name(s) || .]

3. Can update branch name at any time otherwise it will default master or main branch

git branch -b myLearning

4. Link local repository to central or remote one

git remote add origin [Repository http link]

5. commit files into local respository

git commit -m "Pass message"

6. Push committed changes into remote

if no upstream with the name of local branch then use below commond to create in remote repository
		fatal: The current branch master has no upstream branch.
		To push the current branch and set the remote as upstream, use

		git push --set-upstream origin master

or else 

	git push 

================================================================================================================
Frequently used other commands
================================================================================================================

1. To switch from one branch to other

git checkout [other_branch_name]

2. To pull updates from same branch or other branch

git pull 

3. To see the history

git log

4. To see the history 

git show commit_name(get it from log result)

5. Find the difference with respect to previous commit -- not clear

git diff ---- execute this command before adding changes files into staging area, mean to say before git add .

6. check the status

git status -s

7. Want to switch to priority issue, then can use stash command to save half done work seperatley

git stash 

8. Once issue fixed and to resume back to half done work then use

git stash apply --- this will keep stashed entry in the cache
git stash pop --- entry will be removed and changes will bring back

9. To see the list of stashed records

git stash list


================================================================================================================
Less used commands
================================================================================================================

1. To move file from one dir to other

git mv file1.txt src/file/


1. To rename a file into something else

git add file1.txt
git mv file1.txt src/file/file2.txt
git commit -a -m "Added new file and renamed and committed"

	git status -s
	A file1.txt
	R file1.txt âˆ’> file2.txt

	-a === automatically helps to detect the changes

3. Want to revert staged file(s)

	git checkout HEAD --[file_name]
	

	git reset --soft HEAD~
	cat .git/refs/heads/master

4. To tag a commit to the current HEAD

git tag -a 'Release_1_0' -m 'Tagged basic string operation code' HEAD
git push origin tag Release_1_0

5. create and apply patch 
	commit the changes to local repository and then, use last commit id for patch
	git format-patch -1 0001-Added-my_strcat-function.patch
	
	this will create some patch === example 0001-Added-my_strcat-function.patch
	
	git apply 0001-Added-my_strcat-function.patch
	
6. create new branch and push to remote repository
	
	git branch branch_name
	git push --set-upstream origin branch_name
	
	
7. 























