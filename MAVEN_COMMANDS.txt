Apache Maven is a software project management and comprehension tool
POM is the building blocks of Maven and manage a project's build, reporting and documentation from a central piece of information

=========================================================================================================
Environment Setup
=========================================================================================================

1. Java JDK setup -- set JAVA_HOME environment variable --- JAVA_HOME=C:\Program Files\Java\jdk_X_X_X
2. Download maven archieve and Set Maven Environment Variables --- M2_HOME, M2=%M2_HOME%\bin, MAVEN_OPTS=-Xms256m -Xmx512m

=========================================================================================================
POM Basics
=========================================================================================================
1. configuration that can be specified in the POM 	
	project dependencies
	plugins
	goals
	build profiles
	project version
	developers
	mailing list

2. To see the effective POM after creating a POM project file, use following command
	mvn help:effective-pom
	
3. Life cycle order
	clean, validate, compile, test, package, verify, install, site, deploy

4. Three common life cycles
	Clean, build, site
	
5. As a overall 21 different phases
	validate to deploy
=========================================================================================================
Frequently used commands
=========================================================================================================
mvn -DskipTests=true {maven life cycle or commands}

=========================================================================================================

=========================================================================================================

Maven Useful commands - 
1. To know the effective pom --- mvn help:effective-pom
2. To override default JVM memory - update in pom.xml for respective plugin (surefire-plugin configuration section)




